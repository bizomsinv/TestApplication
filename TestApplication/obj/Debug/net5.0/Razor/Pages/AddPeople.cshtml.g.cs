#pragma checksum "C:\Omschrift\Projects\Virtual Coders\Test\TestApplication\Pages\AddPeople.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6db4e2efa8de028795cfaae045a49429869e4ba9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TestApplication.Pages.Pages_AddPeople), @"mvc.1.0.razor-page", @"/Pages/AddPeople.cshtml")]
namespace TestApplication.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Omschrift\Projects\Virtual Coders\Test\TestApplication\Pages\_ViewImports.cshtml"
using TestApplication;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6db4e2efa8de028795cfaae045a49429869e4ba9", @"/Pages/AddPeople.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1d54a01a0538ce87a864a1fa3b44cfba8b209c7", @"/Pages/_ViewImports.cshtml")]
    public class Pages_AddPeople : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"

<div class=""text-center"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
<div class=""row"">
    <div class=""col-md-3"">Name:</div>
    <div class=""col-md-4""><input type=""text"" id=""txtName"" /></div>
</div>
<div class=""row"">
    <div class=""col-md-3"">Surname:</div>
    <div class=""col-md-4""><input type=""text"" id=""txtSurname"" /></div>
</div>
<div class=""row"">
    <div class=""col-md-3"">Born:</div>
    <div class=""col-md-4""><select id=""drpBornTown"" style=""width:200px;""></select></div>
</div>
<div class=""row"">
    <div class=""col-md-3"">Lives:</div>
    <div class=""col-md-4""><select id=""drpLiveTown"" style=""width:200px;""></select></div>
</div>
<div class=""row"">
    <button id=""btnAdd"" onclick=""addPeople();"">Add</button>
</div>
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
<script src=""https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/");
            WriteLiteral(@"js/select2.min.js""></script>
<link href=""https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css"" rel=""stylesheet"" /> 
<script type=""text/javascript"">
    $(document).ready(function() {
        $(""#drpBornTown"").select2({
            minimumInputLength: 2,
            tags: [],
            ajax: {
                url: ""https://localhost:44397/Test/town/"",
                dataType: 'json',
                type: ""GET"",
                quietMillis: 50,
                data: function (term) {
                    return {
                        term: term.term
                    };
                },
                results: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
          ");
            WriteLiteral(@"  }
        });

        $(""#drpLiveTown"").select2({
            minimumInputLength: 2,
            tags: [],
            ajax: {
                url: ""https://localhost:44397/Test/town/"",
                dataType: 'json',
                type: ""GET"",
                quietMillis: 50,
                data: function (term) {
                    return {
                        term: term.term
                    };
                },
                results: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }
        });
    });
    function addPeople(town)
        {
            var flag = false;
            var message = """";
            if($(""#txtName"").val() == """")
            {
 ");
            WriteLiteral(@"               message += ""\nPlease enter Name"";
                flag = true;
            }
            if($(""#txtSurname"").val() == """")
            {
                message += ""\nPlease enter Surname"";
                flag = true;
            }
            if($(""#drpBornTown"").val() == null || $(""#drpBornTown"").val() == """")
            {
                message += ""\nPlease select Born Town"";
                flag = true;
            }
            if($(""#drpLiveTown"").val() == null || $(""#drpLiveTown"").val() == """")
            {
                message += ""\nPlease select Live Town"";
                flag = true;
            }
            if(flag)
            {
                alert(message);
                return false;
            }
            $.ajax({
                url: ""https://localhost:44397/Test/people"",
                type: ""POST"",
                data: '{""Name"": ""' + $(""#txtName"").val() + '"", ""Surname"": ""' + $(""#txtSurname"").val() + '"", ""IdTownBorn"" : ""' + $(""#drpBornTo");
            WriteLiteral(@"wn"").val() + '"", ""IdTownLives"" : ""' + $(""#drpLiveTown"").val() + '""}',
                contentType: ""application/json; charset=utf-8"",
                success: function(resp)
                {
                    if(parseInt(resp) > 0)
                    {
                        alert(""People added Successfully!"");
                        window.location.href = ""https://localhost:44364/""
                    }
                },
                error: function(a, b, c)
                {
                    debugger;
                }
            });    
        }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Test.Web.Pages.AddPeopleModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Test.Web.Pages.AddPeopleModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Test.Web.Pages.AddPeopleModel>)PageContext?.ViewData;
        public Test.Web.Pages.AddPeopleModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
